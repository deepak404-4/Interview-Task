------>   STEP 1

Create a Api Service Interface

import retrofit2.http.GET

interface ApiService {
    @GET("simple.php")
    suspend fun getUsers():List<User>
}


------>   STEP 2
Create a Api Client Object

import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory

object ApiClient {

    private const val BASE_URL = "https://codeschoolhub.com/"

    val apiService : ApiService by lazy{
        Retrofit.Builder()
            .baseUrl(BASE_URL)
            .addConverterFactory(GsonConverterFactory.create())
            .build()
            .create(ApiService::class.java)
    }
}

------>   STEP 3

Crreate a viewModel with flow

import android.util.Log
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.calvintechnoliges.simpleapi.api.ApiClient
import com.calvintechnoliges.simpleapi.api.User
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.StateFlow
import kotlinx.coroutines.launch

class MainViewModel:ViewModel() {
    private val _users = MutableStateFlow<List<User>>(emptyList())
    val users: StateFlow<List<User>> = _users

    init {
        getUsers()
    }

    private fun getUsers(){
        viewModelScope.launch {
           try {
               val users = ApiClient.apiService.getUsers()
               _users.value = users
           } catch (e:Exception){
               Log.e("MainViewModel","Error fetching users",e)
           }
        }
    }

}

------>   STEP 4 
Show Data on List

val viewModel: MainViewModel = viewModel()
val user by viewModel.users.collectAsState()

LazyColumn {
           items(user){
               LUi(name = it.name, email = it.email)
           }
       }

------>   REQUIRED LIBRARY

implementation ("com.squareup.retrofit2:retrofit:2.9.0")
implementation ("com.squareup.retrofit2:converter-gson:2.9.0")
implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
implementation("androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version")

